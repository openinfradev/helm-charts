apiVersion: {{ .Values.api.group.controlplane }}/{{ .Values.api.version }}
kind: KubeadmControlPlane
metadata:
  name: {{ .Values.cluster.name }}
  namespace: {{ .Release.Namespace }}
spec:
  rolloutBefore:
    certificatesExpiryDays: 21 # trigger a rollout if certificates expire within 21 days
  kubeadmConfigSpec:
   {{- if .Values.kubeVip.enabled }}
    files:
    - content: |
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - manager
            env:
            - name: cp_enable
              value: "true"
            - name: vip_arp
              value: "true"
            - name: vip_leaderelection
              value: "true"
            - name: vip_address
              value: {{ .Values.byoCluster.controlPlaneEndpoint.host }}
            - name: vip_interface
              value: {{ .DefaultNetworkInterfaceName }}
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            image: {{ .Values.kubeVip.image }}
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostNetwork: true
          hostAliases:
            - hostnames:
                - kubernetes
              ip: 127.0.0.1
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
              type: FileOrCreate
            name: kubeconfig
        status: {}
      owner: root:root
      path: /etc/kubernetes/manifests/kube-vip.yaml
    {{- end }}
    {{- with .Values.kubeadmControlPlane.clusterConfiguration }}
    clusterConfiguration:
      {{- with .apiServer }}
      apiServer:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .controllerManager }}
      controllerManager:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .etcd }}
      etcd:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imageRepository: {{ .imageRepository }}
    {{- end }}
    initConfiguration:
      nodeRegistration:
        criSocket: unix:///var/run/containerd/containerd.sock
        ignorePreflightErrors:
        - Swap
        - DirAvailable--etc-kubernetes-manifests
        - FileAvailable--etc-kubernetes-kubelet.conf
    joinConfiguration:
      nodeRegistration:
        criSocket: unix:///var/run/containerd/containerd.sock
        ignorePreflightErrors:
        - Swap
        - DirAvailable--etc-kubernetes-manifests
        - FileAvailable--etc-kubernetes-kubelet.conf
  machineTemplate:
    infrastructureRef:
      apiVersion: {{ .Values.api.group.infrastructure }}/{{ .Values.api.version }}
      kind: ByoMachineTemplate
      name: {{ .Values.cluster.name }}-control-plane
  replicas: {{ .Values.kubeadmControlPlane.replicas }}
  version: {{ .Values.cluster.kubernetesVersion }}
---
apiVersion: {{ .Values.api.group.infrastructure }}/{{ .Values.api.version }}
kind: ByoMachineTemplate
metadata:
  name: {{ .Values.cluster.name }}-control-plane
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      {{- with .Values.kubeadmControlPlane.selector }}
      selector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      installerRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: K8sInstallerConfigTemplate
        name: {{ .Values.cluster.name }}-control-plane
        namespace: {{ .Release.Namespace }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: K8sInstallerConfigTemplate
metadata:
  name: {{ .Values.cluster.name }}-control-plane
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      bundleRepo: {{ .Values.byoCluster.bundleLookupBaseRegistry }}
      bundleType: k8s
