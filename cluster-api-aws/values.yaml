# aws ssh key name
sshKeyName: default

cluster:
  name: capi-quickstart
  region: ap-northeast-2
  # multitenancyId:
  #   kind: AWSClusterRoleIdentity or AWSClusterStaticIdentity
  #   name: other-account-role
  eksEnabled: false
  eksAddons: []
  #  - name: "aws-ebs-csi-driver"
  #    version: "v1.15.0-eksbuild.1"
  #    conflictResolution: "overwrite"
  #    serviceAccountRoleARN: arn:aws:iam::XXXXXXXXXXXX:role/AmazonEKS_EBS_CSI_DriverRole_NAME
  #  - name: "vpc-cni"
  #    version: "v1.10.1-eksbuild.1"
  #    conflictResolution: "overwrite"
  # network:
  #   vpc:
  #   id: vpc-id
  #   tags:
  #    string: string
  #   cidrBlock: 10.0.0.0/16
  #   availabilityZoneUsageLimit: 3 # default 3
  #   list of subnets in vpc including both private and public
  #   subnets:
  #   - id: subnet-0c41662a89d7878a2
  #   - id: subnet-03d16e2084d9f392b
  #   - id: subnet-03ad0968f68bfa639
  kubernetesVersion: v1.22.5
  podCidrBlocks:
    - 192.168.0.0/16
  bastion:
    enabled: false
    instanceType: t3.micro
    # disableIngressRules: false
    # allowedCIDRBlocks:
    # - 0.0.0.0/0
    useSpotInstance: #spotMarketOptions:
      enabled: true
      maxPrice: ""
      # MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
  # baseOS is the name of the base operating system to use for image lookup the
  # AMI is not set. (default: "ubuntu-18.04")
  # Available os options: "centos-7", "ubuntu-18.04", "ubuntu-20.04", "amazon-2"
  # baseOS: ubuntu-18.04

api:
  group:
    cluster: cluster.x-k8s.io
    infrastructure: infrastructure.cluster.x-k8s.io
    controlplane: controlplane.cluster.x-k8s.io
    bootstrap: bootstrap.cluster.x-k8s.io
  version: v1beta1

kubeadmControlPlane:
  replicas: 3
  controlPlaneMachineType: t3.large
  rootVolume:
    size: 8
    type: gp3
  # ami:
  #   id: ami-xxxxxxxxxxxxxxxxx
  # additionalSecurityGroups: []
  useSpotInstance: #spotMarketOptions:
    enabled: false
    maxPrice: ""
    # MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
  clusterConfiguration:
    apiServer:
      extraArgs:
        cloud-provider: external # must be defined
    controllerManager:
      extraArgs:
        cloud-provider: external # must be defined
    etcd:
      local:
        extraArgs:
          listen-metrics-urls: "http://0.0.0.0:2381"

machinePool: []
# You can define machinePool. Refer to below.
# - name: taco
#   machineType: t3.2xlarge
#   replicas: 3
#   minSize: 1
#   maxSize: 10
#   rootVolume:
#     size: 200
#   subnets: []
#   labels: []
#   roleAdditionalPolicies:
#   - "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
#   additionalSecurityGroups: []
# **this version dosen't support the spot instance, because the aws cluster api provider doesn't support it in awsmachinpool**
# useSpotInstance:  #spotMarketOptions:
#   enabled: false
#   maxPrice: ''
#   # MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
# - name: normal
#   machineType: t3.large
#   replicas: 1
#   minSize: 1
#   maxSize: 10
#   rootVolume:
#     size: 8
#   subnets: []
#   labels: []
#   additionalSecurityGroups: []

machineDeployment: []
# You can define machineDeployment to use cluster-autoscaler on aws. Refer to below.
# - name: normal
#   numberOfAZ: 3
#   minSizePerAZ: 1
#   maxSizePerAZ: 3
#   selector:
#     matchLabels: null
#   machineType: t3.large
#   rootVolume:
#     size: 20
#     type: gp3
#   useSpotInstance:  #spotMarketOptions:
#     enabled: true
#     maxPrice: ''
#     # MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
#   additionalSecurityGroups: []

nameOverride: ""
fullnameOverride: ""

# Extra args for kubelet except 'cloud-provider'. Refer to the example below.
# kubeletExtraArgs:
#   feature-gates: "InPlacePodVerticalScaling=true"
#   max-pods: "110"
kubeadmConfig:
  kubeletExtraArgs: {}
